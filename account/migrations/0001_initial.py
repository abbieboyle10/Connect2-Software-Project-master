# Generated by Django 3.1.4 on 2021-04-05 15:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_employee', models.BooleanField(default=False)),
                ('is_employer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=200)),
                ('tag', models.TextField(blank=True, max_length=200)),
                ('sector', models.CharField(blank=True, max_length=200)),
                ('avatar', models.ImageField(default='avatar.jpg', upload_to='avatar_pics')),
                ('county', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('personality_test', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description_role', models.TextField(blank=True, max_length=2000, null=True)),
                ('description_personality', models.TextField(blank=True, max_length=200, null=True)),
                ('contract', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=200, null=True)),
                ('office_type', models.CharField(choices=[('Office', 'Office'), ('Remote', 'Remote')], max_length=200, null=True)),
                ('length', models.CharField(choices=[('Permanent', 'Permanent'), ('Temporary', 'Temporary')], max_length=200, null=True)),
                ('ideal_person', models.CharField(max_length=200, null=True)),
                ('location', models.CharField(max_length=200, null=True)),
                ('num_hires', models.IntegerField(null=True)),
                ('enviornment', models.TextField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='account.user')),
                ('phone', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sector', models.CharField(blank=True, max_length=200)),
                ('avatar', models.ImageField(default='avatar.jpg', upload_to='avatar_pics')),
                ('county', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=200)),
                ('years_of', models.CharField(blank=True, choices=[('1 year <', '1 year <'), ('1 - 2 years', '1 - 2 years'), ('2 - 5 years', '2 - 5 years'), ('5 - 10 years', '5 - 10 years'), ('10+ years', '10+ years')], max_length=200)),
                ('description', models.TextField(blank=True, max_length=400)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.employee')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=200)),
                ('current', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=200)),
                ('description', models.TextField(blank=True, max_length=400)),
                ('time_in_role', models.CharField(choices=[('1 year <', '1 year <'), ('1 - 2 years', '1 - 2 years'), ('2 - 5 years', '2 - 5 years'), ('5 - 10 years', '5 - 10 years'), ('10+ years', '10+ years')], max_length=200)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('second round', 'second round'), ('rejected', 'rejected'), ('interview', 'interview'), ('applied', 'applied')], max_length=15)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('score', models.IntegerField(null=True)),
                ('cover_letter', models.TextField(null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='account.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.job')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='employer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.employer'),
        ),
    ]
